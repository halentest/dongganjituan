<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.halen.data.mapper.SkuMapper">
	<sql id="insertColumns">tao_id, goods_id, color_id, color, size, price, quantity, lock_quantity, manaual_lock_quantity, modified, created</sql>

    <!--依据商家自定义sku id查询sku-->
    <select id="selectByHid" parameterType="String" resultType="MySku">
        select * from sku where concat(goods_id, color_id, size) = #{skuId}
    </select>

	<insert id="insert" parameterType="MySku" >
	  	insert into sku(<include refid="insertColumns"/>) values(#{tao_id}, #{goods_id}, #{color_id}, #{color}, #{size}, #{price},
        #{quantity}, #{lock_quantity}, #{manaual_lock_quantity}, now(), now())
	</insert>

    <select id="sumQuantity" resultType="Long">
        select sum(quantity) as q from sku;
    </select>

    <select id="sumLockQuantity" resultType="Long">
        select sum(lock_quantity) as q from sku;
    </select>

	<update id="update" parameterType="MySku">
		update sku set tao_id=#{tao_id}, color_id=#{color_id}, color=#{color}, size=#{size}, price=#{price}, quantity=#{quantity},
            lock_quantity=#{lock_quantity}, manaual_lock_quantity=#{manaual_lock_quantity} where id=#{id}
	</update>

	<delete id="delete" parameterType="long">
		delete from sku where id=#{id}
	</delete>

    <delete id="deleteBatch" parameterType="Map">
        delete from sku where id in (
            <foreach collection="idList" item="item" index="index" separator=",">
                #{item}
            </foreach>
        )
    </delete>

	<select id="select" parameterType="Map" resultType="MySku">
		select * from sku where goods_id=#{goods_id} and color=#{color} and size=#{size1}
	</select>

	<select id="selectBySkuId" parameterType="long" resultType="MySku">
		select * from sku where id=#{skuId}
	</select>

    <select id="selectByGoodsId" parameterType="String" resultType="MySku">
        select * from sku where goods_id=#{goodsId}
    </select>

    <select id="selectByGoodsIdColor" parameterType="Map" resultType="MySku">
        select * from sku where goods_id=#{goodsId} and color=#{color}
    </select>

    <select id="selectByGoodsIdSize" parameterType="Map" resultType="MySku">
        select * from sku where goods_id=#{goodsId} and size=#{size1}
    </select>

    <update id="updateColorByGoodsIdColor" parameterType="Map">
        update sku set color=#{newColor} where goods_id=#{goodsId} and color=#{color}
    </update>

    <update id="updateSizeByGoodsIdSize" parameterType="Map">
        update sku set size=#{newSize} where goods_id=#{goodsId} and size=#{size1}
    </update>

    <select id="selectManaualLock" parameterType="Map" resultType="MySku">
        select * from sku where manaual_lock_quantity > 0
        <if test="goodsId != null">
            and goods_id like CONCAT('%', #{goodsId}, '%')
        </if>
        limit #{start}, #{pageSize}
    </select>

    <select id="countManaualLock" parameterType="Map" resultType="int">
        select count(1) from sku where manaual_lock_quantity > 0
        <if test="goodsId != null">
            and goods_id like CONCAT('%', #{goodsId}, '%')
        </if>
    </select>

    <select id="selectAll" resultType="MySku">
        select * from sku;
    </select>
</mapper>