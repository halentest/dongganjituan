<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.halen.data.mapper.MyLogisticsCompanyMapper">
	
	<sql id="insertColumns">id, code, name, reg_mail_no, status, created</sql>
	<insert id="batchInsert" parameterType="java.util.List">
		insert into logistics_company (<include refid="insertColumns"/>) values
		<foreach collection="list" item="item" index="index"  
            separator=",">  
            (#{item.id}, #{item.code}, #{item.name}, #{item.reg_mail_no}, #{item.status}, now())
        </foreach> 
	</insert>
	
	<insert id="insert" parameterType="MyLogisticsCompany">
		insert into logistics_company (<include refid="insertColumns"/>) values
		(#{id}, #{code}, #{name}, #{reg_mail_no}, #{status}, now()) 
	</insert>
	
	<select id="listAll" resultType="MyLogisticsCompany">
		select * from logistics_company order by status desc
	</select>
	
	<select id="list" resultType="MyLogisticsCompany">
		select * from logistics_company where status in (0, 1)
	</select>
	
	<select id="select" parameterType="int" resultType="MyLogisticsCompany">
		select * from logistics_company where status = #{status}
	</select>
	
	<select id="selectByCode" parameterType="String" resultType="MyLogisticsCompany">
		select * from logistics_company where code = #{code}
	</select>
	
	<select id="selectByName" parameterType="String" resultType="MyLogisticsCompany">
		select * from logistics_company where name = #{name}
	</select>
	
	<update id="update" parameterType="MyLogisticsCompany">
		update logistics_company set name = #{name}, reg_mail_no = #{reg_mail_no}, status = #{status} 
			where code = #{code};
	</update>

    <update id="updateStatus" parameterType="Map">
        update logistics_company set status=#{status} where id=#{id}
    </update>
</mapper>